<!-- This is a reusable ant (see http://ant.apache.org) script 
     for compiling and running applications, for creating API
     documentation and executable jar files.
     
     author: Markus Strauch
-->
<project basedir="." default="about" name="sdedit deployment ant script">
  <description>Quick Sequence Diagram Editor</description>

  <property file="deploy.properties"/>
  <fail unless="sdedit.version" message="Must specify 'sdedit.version' property in 'deploy.properties' file."/>
  <fail unless="sdedit.lib.src" message="Must specify 'sdedit.lib.src' property in 'deploy.properties' file."/>
	
  <!-- internal properties -->
  <property value="__dist" name="dist"/>
  <property value="src" name="src"/>
  <property value="${dist}/tmp/classes" name="build"/>
  <property value="apidoc" name="doc"/>
  <property name="mainclass" value="net.sf.sdedit.Main"/>


  <tstamp/>
  <property value="sdedit-${sdedit.version}-light.jar" name="lightjarfile"/>
  <property value="sdedit-${sdedit.version}.jar" name="jarfile"/>
  <property value="sdedit-${sdedit.version}.exe" name="exefile"/>

  <taskdef name="jsmoothgen" 
  		classname="net.charabia.jsmoothgen.ant.JSmoothGen" 
  		classpath="tools/jsmooth-0.9.9-7/lib/jsmoothgen-ant.jar"/>
	
  <property location="lib" name="lib"/>
  <path id="libs">
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target description="about this ant script" name="about">
    <echo level="info"><![CDATA[
      Available targets:
      
      - compile
        compiles the application and copies resources into ${dist}/tmp/classes

      - start
        compiles, copies resources and starts the application

      - run
        starts the application provided it has been compiled
      
      - server
        like run, also starts the diagram server listening at port 62015
     
      - doc
        creates api documentation

      - jar
        compiles the application and unpacks the dependency libs and builds a single
        executable jar, and puts it into ${dist}/sdedit-jar/.

      - jar
        compiles the application and copies the dependency libs and builds a single
        sdedit-only executable jar, and puts it into ${dist}/sdedit-jar-light/.

      - win32
        compiles the application and unpacks the dependency libs and builds a single
        executable jar, then uses jsmooth to create a single windows .exe and puts 
    	it into ${dist}/sdedit-win32/.

     ]]></echo>
  </target>
	
  <target depends="compile,run" description="compiles and starts" name="start"/>
	
  <target description="compiles the project" name="compile">
    <mkdir dir="${build}"/>
  	<delete file="${build}/resource/about.html"/>
    <copy todir="${build}">
      <fileset dir="${src}">
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${sdedit.lib.src}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <javac debug="off" 
    	   nowarn="on"
    	   encoding="ISO-8859-1"
    	   failonerror="false"
    	   source="1.5"
    	   destdir="${build}">
	  <src path="${src}"/>
	  <src path="${sdedit.lib.src}"/>
      <classpath>
        <path refid="libs"/>
      </classpath>
    </javac>

  	<replace file="${build}/resource/about.html" token="_VERSION_" value="${sdedit.version}"/>
  	<replace file="${build}/resource/about.html" token="_DATE_" value="${TODAY}"/>
  </target>

  <target depends="compile" description="Starts the Quick Sequence Diagram server" name="server">
    <java classname="${mainclass}" fork="true">
      <arg value="-s"/>
      <arg value="62015"/>
      <classpath>
        <path refid="libs"/>
        <pathelement path="${build}"/>
      </classpath>
    </java>
  </target>

  <target depends="compile" description="starts the application" name="run">
    <java classname="${mainclass}" fork="true">
      <classpath>
        <path refid="libs"/>
        <pathelement path="${build}"/>
      </classpath>
    </java>
  </target>
	
  <target description="creates javadoc documentation" name="doc">
    <mkdir dir="${doc}"/>
    <javadoc destdir="${doc}" linksource="yes" source="1.5" packagenames="*">
  	  <fileset dir="${src}"/>
  	  <fileset dir="${sdedit.lib.src}"/>
  	</javadoc>
  </target>


  <target depends="compile" description="creates executable java archive" name="jar-light">
    <mkdir dir="${dist}/sdedit-jar-light/lib"/>
	<copy todir="${dist}/sdedit-jar-light" flatten="true">
		<filelist dir="./" files="LICENSE,THIRDPARTYLICENSE,BIN-README"/>
	</copy>
  	<copy file="build-bin.xml" tofile="${dist}/sdedit-jar-light/build.xml"/>
  	<copy todir="${dist}/sdedit-jar-light/lib">
  		<fileset dir="lib"/>
  	</copy>
  	<move file="${dist}/sdedit-jar-light/BIN-README" tofile="${dist}/sdedit-jar-light/README"/>
	<jar destfile="${dist}/sdedit-jar-light/${lightjarfile}" 
		   excludes="**/ExportFileType">
   	  <fileset dir="${build}"/>
	  <manifest>
	     <attribute name="Main-Class" value="${mainclass}"/>
	  </manifest>
	</jar>
  </target>
	
  <target depends="compile" description="creates executable java archive" name="jar">
    <mkdir dir="${dist}/tmp/libclasses"/>
    <mkdir dir="${dist}/sdedit-jar"/>
	<copy todir="${dist}/sdedit-jar" flatten="true">
		<filelist dir="./" files="LICENSE,THIRDPARTYLICENSE,BIN-README"/>
	</copy>
  	<copy file="build-bin.xml" tofile="${dist}/sdedit-jar-light/build.xml"/>
  	<move file="${dist}/sdedit-jar/BIN-README" tofile="${dist}/sdedit-jar/README"/>
    <unjar dest="${dist}/tmp/libclasses">
    	<fileset dir="lib/">
    		<include name="*.jar"/>
    	</fileset>
    </unjar>
    <delete dir="${dist}/tmp/META-INF"/>
    <jar destfile="${dist}/sdedit-jar/${jarfile}" 
    	   excludes="**/ExportFileType">
    	<fileset dir="${build}"/>
    	<fileset dir="${dist}/tmp/libclasses"/>
    	<fileset dir="." includes="META-INF/**/*"/>
      <manifest>
         <attribute name="Main-Class" value="${mainclass}"/>
      </manifest>
    </jar>
  </target>

  <target depends="jar" description="creates windows executable" name="win32">
	  <mkdir dir="${dist}/sdedit-win32"/>
	  <copy todir="${dist}/sdedit-win32" flatten="true">
	  	<filelist dir="./" files="LICENSE,THIRDPARTYLICENSE,BIN-README,win32/qsde-win32.jsmooth"/>
	  </copy>
  	  <replace file="${dist}/sdedit-win32/qsde-win32.jsmooth" token="sdedit.jar" value="${jarfile}"/>
  	  <move file="${dist}/sdedit-win32/BIN-README" tofile="${dist}/sdedit-win32/README"/>
	  <jsmoothgen 
	  		project="${dist}/sdedit-win32/qsde-win32.jsmooth" 
	  		skeletonroot="tools/jsmooth-0.9.9-7/skeletons"/>
	  <delete file="${dist}/sdedit-win32/qsde-win32.jsmooth"/>
	  <move file="${dist}/sdedit-win32/sdedit.exe" tofile="${dist}/sdedit-win32/${exefile}"/>
  </target>

  <target name="all" description="builds all deployment targets" depends="jar-light,jar,win32"/>

  <target name="clean" description="deletes the distribution working folder and contents" >
  	<delete dir="${dist}"/>
  </target>
  	

</project>

