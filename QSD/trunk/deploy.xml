<!-- This is a reusable ant (see http://ant.apache.org) script 
     for compiling and running applications, for creating API
     documentation and executable jar files.
     
     author: Markus Strauch
-->
<project basedir="." default="about" name="sdedit deployment ant script">
  <description>Quick Sequence Diagram Editor</description>

  <property file="deploy.properties"/>
  <fail unless="sdedit.version" message="Must specify 'sdedit.version' property in 'deploy.properties' file."/>
  <fail unless="sdedit.lib.src" message="Must specify 'sdedit.lib.src' property in 'deploy.properties' file."/>
	
  <!-- internal properties -->
  <property value="__dist" name="dist"/>
  <property value="src" name="src"/>
  <property value="${dist}/tmp/classes" name="build"/>
  <property value="apidoc" name="doc"/>
  <property name="mainclass" value="net.sf.sdedit.Main"/>


  <tstamp/>
  <property value="sdedit-${sdedit.version}" name="appname"/>
  <property value="${appname}-light.jar" name="lightjarfile"/>
  <property value="${appname}.jar" name="jarfile"/>
  <property value="${appname}.exe" name="exefile"/>
  <property value="Sequence Diagram Editor" name="osxfile"/>

  <taskdef name="jarbundler" 
	    classname="net.sourceforge.jarbundler.JarBundler" 
  	    classpath="tools/jarbundler-2.2.0/jarbundler-2.2.0.jar"/>
  <taskdef name="jsmoothgen" 
		classname="net.charabia.jsmoothgen.ant.JSmoothGen" 
		classpath="tools/jsmooth-0.9.9-7/lib/jsmoothgen-ant.jar"/>
	
  <property location="lib" name="lib"/>
  <path id="libs">
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target description="about this ant script" name="about">
    <echo level="info"><![CDATA[
      Available targets:
      
      - compile
        compiles the application and copies resources into ${dist}/tmp/classes

      - start
        compiles, copies resources and starts the application

      - run
        starts the application provided it has been compiled
      
      - server
        like run, also starts the diagram server listening at port 62015
     
      - doc
        creates api documentation

      - jar
        compiles the application and unpacks the dependency libs and builds a single
        executable jar, and puts it into ${dist}/sdedit-jar/.

      - jar
        compiles the application and copies the dependency libs and builds a single
        sdedit-only executable jar, and puts it into ${dist}/sdedit-bin/.

      - win32
        compiles the application and unpacks the dependency libs and builds a single
        executable jar, then uses jsmooth to create a single windows .exe and puts 
    	it into ${dist}/sdedit-win32/.

      - macosx
        compiles the application and unpacks the dependency libs and builds a single
        executable jar, then uses jarbundler to create a single Mac OS X application
    	in ${dist}/sdedit-win32/. If the platform running this build file is a Mac,
    	it then created a DMG file of the folder.

      - all
    	compiles and builds both the light and heavy jars, the windows executable
    	and the Mac OS X package.
    	
     ]]></echo>
  </target>
	
  <target depends="compile,run" description="compiles and starts" name="start"/>
	
  <target description="compiles the project" name="compile">
    <mkdir dir="${build}"/>
  	<delete file="${build}/resource/about.html"/>
    <copy todir="${build}">
      <fileset dir="${src}">
        <exclude name="**/*.java"/>
      </fileset>
      <fileset dir="${sdedit.lib.src}">
        <exclude name="**/*.java"/>
      </fileset>
    </copy>
    <javac debug="off" 
    	   nowarn="on"
    	   encoding="ISO-8859-1"
    	   failonerror="false"
    	   source="1.5"
    	   destdir="${build}">
	  <src path="${src}"/>
	  <src path="${sdedit.lib.src}"/>
      <classpath>
        <path refid="libs"/>
      </classpath>
    </javac>

  	<replace file="${build}/resource/about.html" token="_VERSION_" value="${sdedit.version}"/>
  	<replace file="${build}/resource/about.html" token="_DATE_" value="${TODAY}"/>
  </target>

  <target depends="compile" description="Starts the Quick Sequence Diagram server" name="server">
    <java classname="${mainclass}" fork="true">
      <arg value="-s"/>
      <arg value="62015"/>
      <classpath>
        <path refid="libs"/>
        <pathelement path="${build}"/>
      </classpath>
    </java>
  </target>

  <target depends="compile" description="starts the application" name="run">
    <java classname="${mainclass}" fork="true">
      <classpath>
        <path refid="libs"/>
        <pathelement path="${build}"/>
      </classpath>
    </java>
  </target>
	
  <target description="creates javadoc documentation" name="doc">
    <mkdir dir="${doc}"/>
    <javadoc destdir="${doc}" linksource="yes" source="1.5" packagenames="*">
  	  <fileset dir="${src}"/>
  	  <fileset dir="${sdedit.lib.src}"/>
  	</javadoc>
  </target>

  <target depends="compile" description="creates source distro" name="src">
    <mkdir dir="${dist}/sdedit-src/lib"/>
    <mkdir dir="${dist}/sdedit-src/src"/>
	<copy todir="${dist}/sdedit-src" flatten="true">
		<fileset dir="targets/common" />
		<fileset dir="targets/bin"/>
		<fileset dir="targets/src"/>
	</copy>
  	<chmod file="${dist}/sdedit-src/sdedit.sh" perm="a+x"/>
  	<copy todir="${dist}/sdedit-src/lib">
  		<fileset dir="lib"/>
  	</copy>
  	<copy todir="${dist}/sdedit-src/src">
  		<fileset dir="apple"/>
  		<fileset dir="src"/>
  		<fileset dir="${sdedit.lib.src}"/>
  	</copy>
  	<tar destfile="${dist}/${appname}-src.tar.gz" basedir="${dist}/sdedit-src" compression="gzip"/>
  </target>

  <target depends="compile" description="creates binary generic java distro" name="bin">
    <mkdir dir="${dist}/sdedit-bin/lib"/>
    <mkdir dir="${dist}/sdedit-bin/bin"/>
	<copy todir="${dist}/sdedit-bin" flatten="true">
		<fileset dir="targets/common" />
		<fileset dir="targets/bin"/>
	</copy>
  	<chmod file="${dist}/sdedit-bin/sdedit.sh" perm="a+x"/>
  	<copy todir="${dist}/sdedit-bin/lib">
  		<fileset dir="lib"/>
  	</copy>
  	<copy todir="${dist}/sdedit-bin/bin">
  		<fileset dir="${build}"/>
  	</copy>
  	<tar destfile="${dist}/${appname}-bin.tar.gz" basedir="${dist}/sdedit-bin" compression="gzip"/>
  </target>
	
  <target depends="compile" description="creates executable java archive" name="jar">
    <mkdir dir="${dist}/tmp/libclasses"/>
    <mkdir dir="${dist}/sdedit-jar"/>
	<copy todir="${dist}/sdedit-jar" flatten="true">
		<fileset dir="targets/common" />
	</copy>
    <unjar dest="${dist}/tmp/libclasses">
    	<fileset dir="lib/">
    		<include name="*.jar"/>
    	</fileset>
    </unjar>
    <delete dir="${dist}/tmp/META-INF"/>
    <jar destfile="${dist}/sdedit-jar/${jarfile}" 
    	   excludes="**/ExportFileType">
    	<fileset dir="${build}"/>
    	<fileset dir="${dist}/tmp/libclasses"/>
    	<fileset dir="." includes="META-INF/**/*"/>
      <manifest>
         <attribute name="Main-Class" value="${mainclass}"/>
      </manifest>
    </jar>
  </target>

  <target depends="jar" description="creates windows executable" name="win-jsmooth">
	  <mkdir dir="${dist}/sdedit-win32"/>
	  <copy todir="${dist}/sdedit-win32" flatten="true">
		<fileset dir="targets/common" />
		<fileset dir="targets/win32"/>
	  </copy>
	  <delete file="${dist}/sdedit-win32/sdedit.exe.xml"/>
  	  <replace file="${dist}/sdedit-win32/qsde-win32.jsmooth" token="sdedit.jar" value="${jarfile}"/>
	  <jsmoothgen 
	  		project="${dist}/sdedit-win32/qsde-win32.jsmooth" 
	  		skeletonroot="tools/jsmooth-0.9.9-7/skeletons"/>
	  <delete file="${dist}/sdedit-win32/qsde-win32.jsmooth"/>
	  <move file="${dist}/sdedit-win32/sdedit.exe" tofile="${dist}/sdedit-win32/${exefile}"/>
  </target>

  <target depends="jar" description="creates windows executable" name="windows">
	  <mkdir dir="${dist}/sdedit-win32"/>
	  <copy todir="${dist}/sdedit-win32" flatten="true">
		<fileset dir="targets/common" />
		<fileset dir="targets/win32"/>
	  </copy>
  	  <delete file="${dist}/sdedit-win32/qsde-win32.jsmooth"/>
  	  <dirname property="dist.full" file="${dist}/sdedit-win32"/>
	  <replace file="${dist}/sdedit-win32/sdedit.exe.xml" 
	  			token="%%JARFILE%%" value="${dist.full}/sdedit-jar/${jarfile}"/>
	  <replace file="${dist}/sdedit-win32/sdedit.exe.xml" 
	  			token="%%EXEFILE%%" value="${dist.full}/sdedit-win32/${exefile}"/>
  	  <java fork="true" dir="tools/launch4j-3.0.2/${os.name}/" 
  	  					jar="tools/launch4j-3.0.2/${os.name}/launch4j.jar">
		<arg line="${dist.full}/sdedit-win32/sdedit.exe.xml"/>
  	  </java>
	  <delete file="${dist}/sdedit-win32/sdedit.exe.xml"/>
  </target>

  <target depends="jar" description="creates Mac OS X executable" name="macosx">
	  <mkdir dir="${dist}/sdedit-macosx"/>
	  <copy todir="${dist}/sdedit-macosx" flatten="true">
		<fileset dir="targets/common" />
		<fileset dir="targets/macosx"/>
	  </copy>
	  <jarbundler
	  		dir="${dist}/sdedit-macosx"
	        icon="apple/dock-icon.icns"
	  	    name="${osxfile}"
	  		mainClass="${mainclass}"
	  		jar="${dist}/sdedit-jar/${jarfile}"/>
  	  <exec executable="hdiutil" os="Mac OS X">
  		    <arg line="create -srcfolder ${dist}/sdedit-macosx ${dist}/${appname}.dmg"/>
  	  </exec>
  </target>

  <target name="all" description="builds all deployment targets" depends="src,bin,jar,windows,macosx"/>

  <target name="clean" description="deletes the distribution working folder and contents" >
  	<delete dir="${dist}"/>
  </target>
  	

</project>

