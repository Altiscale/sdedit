#!/bin/bash

VERSION=$1

if [ ! -n "$VERSION" ]
then
  echo " 
usage: deploy <version>
Creates the following files:
 
* sdedit-<version>.jar
* sdedit-<version>.bin.zip
* sdedit-<version>-src.zip
  "
  exit
fi

source ./deploy-functions.sh

ROOT=`pwd`

EXCLUDE_CLASSES="_LOG_ MemoryGuard Main2 VersionControl TipModelImpl tips.txt"
JSMOOTH_HOME="/home/strauch/.wine/drive_c/Programme/jsmooth"
WINJDK=/home/strauch/.wine/drive_c/Programme/jdk1.6.0/bin
export JAVA_HOME=/opt/java/jdk
SYMLINK="$ROOT/sdedit.jar"

DIST=sdedit

JAR=$DIST-$VERSION.jar
CORE=$DIST-$VERSION-core.jar
LIGHT=$DIST-$VERSION-light.jar
BINZIP=$DIST-$VERSION.bin.zip
SRCZIP=$DIST-$VERSION.src.zip
EXE=$DIST-$VERSION.exe

JSMOOTH_FILE="sdedit-$VERSION.jsmooth"
JSMOOTH_FULL="$JSMOOTH_HOME/$JSMOOTH_FILE"

$JAVA_HOME/bin/java -cp ../sdedit-doc/bin MakeHelp 

#
# Copy all sources to "java" subdirectory, strip
# lines including _LOG_
#

init "java"

# no preprocessing for library classes ... TODO!?
cp -r ../QSD-lib/src/* java/

cd src

if [ -e ./net/sf/sdedit/re ]
then
  rm ./net/sf/sdedit/re
fi

ln -s $ROOT/../QSD-RE/src/net/sf/sdedit/re ./net/sf/sdedit/re

###########################################
# Copy files to temporary java directory  #
# and do some preprocessing:              #
#                                         #
# - Remove lines that contain _LOG_       #
# - make some substitutions in about.html #
#   (current version and date)            #
###########################################

for FILE in $(files "java html conf png txt sdx jar" "$EXCLUDE_CLASSES")
do
  if [ ! -d $FILE ]
  then
    echo $FILE
    cp --parents $FILE ../java/
    if echo $FILE | grep -q '\.java$'
    then
      cat $FILE | awk '/_LOG_/,/;/ {next} "true"' > ../java/$FILE     
    fi
    if echo $FILE | grep -q 'about.html'
    then
      cat $FILE | sed "s/_VERSION_/$VERSION/;s/_DATE_/$(date -I)/"\
          > ../java/$FILE
    fi
  fi
done
echo created preprocessed files in java subdirectory
cd $ROOT

rm src/net/sf/sdedit/re

init "classes"

ant -buildfile deploy.xml compile

init "$DIST"

#################################################################
# Create the executable jar file containing all library classes #
#################################################################

cd classes
for FILE in $(files "class conf html png txt sdx jar")
do
  if [ ! -d $FILE ]
  then
    cp --parents $FILE ../$DIST/
  fi
done
cd $ROOT
cp LICENSE $DIST
echo "Main-Class: net.sf.sdedit.Main" | cat > /tmp/$$manifest.txt
cd $DIST
unzip -qq ../lib/commons-cli-1.1.jar -x '*META-INF*'
jar cmf /tmp/$$manifest.txt ../$LIGHT .
echo created $LIGHT
for FILE in ../lib/{freehep,openide}*jar ../lib2/asm*jar
do
  unzip -qq $FILE -x '*META-INF*'
done
cd ..
cp --parents META-INF/services/* $DIST 
cd $DIST
jar cmf /tmp/$$manifest.txt ../$JAR .
echo created $JAR
cd $ROOT

if [ -e "$SYMLINK" ]
then
  rm "$SYMLINK"
fi
ln -s $JAR $SYMLINK

echo created symbolic link $SYMLINK

init "$DIST"

##################################
# Create the binary distribution #
##################################

mkdir $DIST/bin
cd classes
for FILE in $(files "class conf html png txt sdx jar")
do
  if [ ! -d $FILE ]
  then
    cp --parents $FILE ../$DIST/bin
  fi
done

cd $ROOT
CMD="$(start_command lib)"
echo $CMD' $* ' | cat > $DIST/sdedit.sh
chmod +x $DIST/sdedit.sh
CMD="$(dos_start_command lib)"
echo $CMD '%1 %2 %3 %4 %5 %6 %7 %8 %9' | cat > $DIST/sdedit.bat
#cp ../sd-client/sd-client.pl $DIST
cp THIRDPARTYLICENSE LICENSE $DIST
cp BIN-README $DIST/README
cp build-bin.xml $DIST/build.xml
cp -r lib $DIST/

zip -rq $BINZIP $DIST
echo created $BINZIP


##################################
# Create the source distribution #
##################################

rm -rf $DIST/bin

mkdir $DIST/src
cd java
for FILE in $(files "java conf html png txt sdx jar")
do
  if [ ! -d $FILE ]
  then
    cp --parents $FILE ../$DIST/src
  fi
done

cd $ROOT

cp SRC-README $DIST/README
cp build-src.xml $DIST/build.xml

zip -rq $SRCZIP $DIST
echo created $SRCZIP

#############################
## Create the core jar file #
## for API use.             #
## (no GUI and no editing)  #
#############################
#
## Remove non-core files from java directory
#for FILE in $(find java)
#do
#  if ! egrep -q '//\{\{core\}\}' $FILE
#  then
#    if [ ! -d $FILE ]
#    then
#      rm -f $FILE
#    fi
#  fi
#done
#
## Remove empty (sub-)directories from java directory
#for DIR in $(find java | egrep -v '\.java' | sort -r)
#do
#  if [ -d $DIR ]
#  then
#    if [ 0 == $(ls $DIR | wc --lines) ] 
#    then
#      rmdir $DIR
#    fi
#  fi
#done
#
#rm -rf classes/*
#
#ant -buildfile deploy.xml compile
#
#cd classes
#
#jar cf ../$CORE .
#echo created $CORE
#

cd $ROOT 

rm -rf java classes
echo deleted temporary subdirectories \"java\" and \"classes\"

#######################
# Create the EXE file #
#######################

cat sdedit.jsmooth | sed "s/JAR/$JAR/;s/EXE/$EXE/" > "$JSMOOTH_FULL"
echo created "$JSMOOTH_FULL"
cd "$JSMOOTH_HOME"
export PATH=$WINJDK:$PATH
wine jsmoothcmd $JSMOOTH_FILE
echo created $EXE

rm "$JSMOOTH_FULL"
echo deleted "$JSMOOTH_FULL"
cd $ROOT
